./FillLayer/LinearFill+RuntimeShapeRange.py:53: DeprecationWarning: Use set_tensor_address instead.
  context.set_shape_input(0, np.array([nOut, nCOut, hOut, wOut], dtype=np.int32))
./FillLayer/LinearFill+RuntimeShapeRange.py:61: DeprecationWarning: Use get_tensor_shape instead.
  bufferH.append(np.empty(context.get_binding_shape(i), dtype=trt.nptype(engine.get_tensor_dtype(lTensorName[i]))))
context.all_binding_shapes_specified: True
[ 0]Input -> DataType.INT32 (4,) (4,) inputT0
[ 1]Input -> DataType.FLOAT () () inputT1
[ 2]Input -> DataType.FLOAT (4,) (4,) inputT2
[ 3]Output-> DataType.FLOAT (-1, -1, -1, -1) (-1, -1, -1, -1) (Unnamed Layer* 0) [Fill]_output
inputT0
[1 3 4 5]
inputT1
[1000.]
inputT2
[  0. 100.  10.   1.]
(Unnamed Layer* 0) [Fill]_output
[[[[1000. 1001. 1002. 1003. 1004.]
   [1010. 1011. 1012. 1013. 1014.]
   [1020. 1021. 1022. 1023. 1024.]
   [1030. 1031. 1032. 1033. 1034.]]

  [[1100. 1101. 1102. 1103. 1104.]
   [1110. 1111. 1112. 1113. 1114.]
   [1120. 1121. 1122. 1123. 1124.]
   [1130. 1131. 1132. 1133. 1134.]]

  [[1200. 1201. 1202. 1203. 1204.]
   [1210. 1211. 1212. 1213. 1214.]
   [1220. 1221. 1222. 1223. 1224.]
   [1230. 1231. 1232. 1233. 1234.]]]]
